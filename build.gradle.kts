/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    `java-library`
    `maven-publish`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://meshbinhyd.pega.com/artifactory/repo2")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    api(libs.junit.junit)
    api(libs.com.google.guava.guava)
    api(libs.com.google.protobuf.protoc)
    api(libs.org.seleniumhq.selenium.selenium.java)
    api(libs.org.seleniumhq.selenium.selenium.remote.driver)
    api(libs.io.netty.netty.buffer)
    api(libs.io.netty.netty.codec.http)
    api(libs.io.netty.netty.common)
    api(libs.io.netty.netty.resolver)
    api(libs.io.netty.netty.transport)
    api(libs.com.typesafe.netty.netty.reactive.streams)
    api(libs.io.netty.netty.handler)
    api(libs.com.sun.activation.jakarta.activation)
    api(libs.io.netty.netty.codec.socks)
    api(libs.io.netty.netty.handler.proxy)
    api(libs.io.netty.netty.transport.native.epoll)
    api(libs.com.pojosontheweb.monte.repack)
    api(libs.org.jsoup.jsoup)
    api(libs.jakarta.mail.jakarta.mail.api)
    api(libs.com.google.inject.guice)
    api(libs.net.lingala.zip4j.zip4j)
    api(libs.org.apache.httpcomponents.httpclient)
    api(libs.com.google.code.gson.gson)
    api(libs.org.apache.ant.ant)
    api(libs.io.cucumber.cucumber.testng)
    api(libs.org.webjars.jquery)
    api(libs.org.apache.poi.poi.ooxml)
    api(libs.org.apache.commons.commons.compress)
    api(libs.org.apache.xmlbeans.xmlbeans)
    api(libs.org.apache.pdfbox.pdfbox)
    api(libs.org.slf4j.slf4j.api)
    api(libs.ch.qos.logback.logback.classic)
    api(libs.ch.qos.logback.logback.core)
    api(libs.commons.codec.commons.codec)
    api(libs.commons.io.commons.io)
    api(libs.io.cucumber.cucumber.guice)
    api(libs.io.cucumber.tag.expressions)
    api(libs.io.cucumber.cucumber.expressions)
    api(libs.io.cucumber.cucumber.core)
    api(libs.io.cucumber.cucumber.java)
    api(libs.io.cucumber.cucumber.junit)
    api(libs.io.cucumber.cucumber.jvm.deps)
    api(libs.mx4j.mx4j)
    api(libs.org.codehaus.plexus.plexus.utils)
    api(libs.io.rest.assured.rest.assured)
    api(libs.com.aventstack.extentreports)
    api(libs.org.apache.httpcomponents.httpmime)
    api(libs.org.codehaus.groovy.groovy)
    api(libs.com.fasterxml.jackson.core.jackson.databind)
    api(libs.org.eclipse.jetty.jetty.io)
    api(libs.org.yaml.snakeyaml)
    api(libs.io.cucumber.gherkin)
    api(libs.org.springframework.spring.beans)
    api(libs.org.springframework.spring.context)
    api(libs.org.testng.testng)
    api(libs.io.cucumber.cucumber.jvm)
    api(libs.com.browserstack.browserstack.local.java)
    api(libs.com.beust.jcommander)
    testImplementation(libs.org.hamcrest.hamcrest.core)
    compileOnly(libs.org.apache.maven.plugin.tools.maven.plugin.annotations)
    system(libs.com.pega.test.pega.base.ui.testframework)
}

group = "com.pega.test"
version = "1.0.0"
description = "pega-sample-testframework"
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}

tasks.named<Test>("test") {
    useTestNG()
}
